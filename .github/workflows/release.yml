name: Release AST Inspector VSIX

on:
    push:
        branches:
            - main

jobs:
    check_push:
        outputs:
            is_feat_or_bug: ${{ steps.check_commit_type.outputs.is_feat_or_bug }}
            is_release: ${{ steps.check_commit_type.outputs.is_release }}
        runs-on: ubuntu-latest
        steps:
            - name: Check commit type
              id: check_commit_type
              run: |
                COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
                
                if [[ "$COMMIT_MESSAGE" =~ ^Release\ v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
                    echo "Release commit detected, proceeding with VSIX release"
                    echo "is_release=true" >> $GITHUB_OUTPUT
                    echo "is_feat_or_bug=false" >> $GITHUB_OUTPUT
                elif [[ "$COMMIT_MESSAGE" =~ ^\#(feat|bug) ]]; then
                    echo "Feature or bug commit detected, proceeding with release preparation"
                    echo "is_feat_or_bug=true" >> $GITHUB_OUTPUT
                    echo "is_release=false" >> $GITHUB_OUTPUT
                else
                    echo "No release action needed for this commit"
                    echo "is_feat_or_bug=false" >> $GITHUB_OUTPUT
                    echo "is_release=false" >> $GITHUB_OUTPUT
                fi

    prepare_release:
        needs: check_push
        permissions:
            contents: write
            actions: read
            security-events: write
            issues: write
            pull-requests: write
        if: ${{ needs.check_push.outputs.is_feat_or_bug == 'true' }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                fetch-depth: 0

            - name: Install dependencies
              run: |
                npm install
                cd frontend && npm install
                cd ..
            
            - name: Clear any package-lock changes
              run: git checkout -- .

            - name: Configure Git
              run: |
                git config --global user.email "luau-ast-explorer-bot@users.noreply.github.com"
                git config --global user.name "luau-ast-explorer-bot"

            - name: Bump Version
              run: |
                npm version patch
            
            - name: Get version
              id: get-version
              run: |
                VERSION=$(cat package.json | jq -r '.version')
                echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

            - name: Process Changelog
              run: |
                echo "Processing changelog files for version ${{ steps.get-version.outputs.VERSION }}..."
                npm run process-changelog ${{ steps.get-version.outputs.VERSION }}

            - name: Create PR for Release
              uses: peter-evans/create-pull-request@v6
              with:
                title: 'Release v${{ steps.get-version.outputs.VERSION }} #chore'
                body: |
                  ðŸš€ **Release v${{ steps.get-version.outputs.VERSION }}**
                  
                  **To complete the release:**
                  1. Review the changes
                  2. Merge this PR to trigger the release

                branch: release-vsix
                base: main
                author: 'github-actions[bot] <github-actions[bot]@users.noreply.github.com>'
                committer: 'github-actions[bot] <github-actions[bot]@users.noreply.github.com>'
                token: ${{ secrets.GITHUB_TOKEN }}
                delete-branch: true

    release_vsix:
        needs: check_push
        permissions:
            contents: write
        if: ${{ needs.check_push.outputs.is_release == 'true' }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                fetch-depth: 0

            - name: Install dependencies
              run: |
                npm install
                cd frontend && npm install
                cd ..
            
            - name: Install VSCE
              run: npm install -g @vscode/vsce

            - name: Get version
              id: get-version
              run: |
                VERSION=$(cat package.json | jq -r '.version')
                echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

            - name: Get changelog diff
              id: get-changelog-diff
              run: |
                CHANGELOG_DIFF=$(git diff HEAD~1 HEAD -- CHANGELOG.md | grep '^+' | grep -v '^+++' | sed 's/^+//' | grep -E '^(### |- )' || echo "No changelog entries found")
                
                # Format the changelog for release notes
                echo "CHANGELOG_DIFF<<EOF" >> $GITHUB_OUTPUT
                echo "$CHANGELOG_DIFF" >> $GITHUB_OUTPUT
                echo "EOF" >> $GITHUB_OUTPUT

            - name: Build
              run: npm run compile

            - name: Package
              run: npm run package

            - name: Create release
              uses: softprops/action-gh-release@v2
              with:
                tag_name: v${{ steps.get-version.outputs.VERSION }}
                name: v${{ steps.get-version.outputs.VERSION }}
                files: ./luau-ast-explorer-${{ steps.get-version.outputs.VERSION }}.vsix
                draft: false
                prerelease: true
                token: ${{ secrets.GITHUB_TOKEN }}
                generate_release_notes: false
                body: |                  
                  ${{ steps.get-changelog-diff.outputs.CHANGELOG_DIFF }}
                  
                  **Full Changelog**: https://github.com/${{ github.repository }}/compare/v${{ steps.get-version.outputs.VERSION }}...HEAD 
